apiVersion: envoy.kaasops.io/v1alpha1
kind: Listener
metadata:
  labels:
    app.kubernetes.io/name: listener
    app.kubernetes.io/instance: listener-sample
    app.kubernetes.io/part-of: envoy-xds-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: envoy-xds-controller
  name: custom-listener
spec:
  name: custom-listener
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8443
  listener_filters:
    - name: "envoy.filters.listener.tls_inspector" 
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector  
  filter_chains:
    - filter_chain_match:
        server_names:
          - exmaple5.io
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: test_http
          access_log:
          - name: envoy.access_loggers
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /tmp/access_log
              log_format: 
                json_format: 
                  timestamp: "%START_TIME%"
                  verison: "%PROTOCOL%"
                  request_time: "%DURATION%"
                  status: "%RESPONSE_CODE%"
                  response_flags: "%RESPONSE_FLAGS%"
                  upstream_cluster: "%UPSTREAM_CLUSTER%"
                  real-host: "%REQ(ORIGINAL-HOST)%"
                  host: "%REQ(:AUTHORITY)%"
                  response_code_details: "%RESPONSE_CODE_DETAILS%"
                  real-ip: "%REQ(REAL-IP)%"
                  request: "%REQ(:PATH)%"
                  serverip: "%DOWNSTREAM_LOCAL_ADDRESS_WITHOUT_PORT%"
                  server_port: "%DOWNSTREAM_LOCAL_PORT%"
                  server_protocol: "%PROTOCOL%"
                  sni: "%REQUESTED_SERVER_NAME%"
                  ssl_cipher: "%DOWNSTREAM_TLS_CIPHER%"
                  ssl_protocol: "%DOWNSTREAM_TLS_VERSION%"
                  hostname: "%HOSTNAME%"
                  method: "%REQ(:METHOD)%"
                  user_agent: "%REQ(USER-AGENT)%"
                  request_id: "%REQ(X-REQUEST-ID)%"
                  scheme: "%REQ(:SCHEME)%"
                  http_referer: "%REQ(REFERER)%"
                  x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                  x_requested_with: "%REQ(X-REQUESTED-WITH)%"
                  envoy_response_flags: "%RESPONSE_FLAGS%"
                  location_id: "%REQ(LOCATION-ID)%"
                  upstream_response_time: "%RESPONSE_DURATION%"
                  upstream_failure: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                  balancer: "envoy"
          codec_type: AUTO
          route_config:
            name: local_route
            request_headers_to_add:
            - header:
                key: "PHEADER"
                value: "LOL.KEK"
            virtual_hosts:
            - name: vh-test3
              domains:
              - example5.io
              routes:
              - match: 
                  prefix: "/"
                route: 
                  cluster: cluster-sample
